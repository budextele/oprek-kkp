/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package oprek_kkp;

import com.mysql.jdbc.ResultSet;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import project.koneksi;

//import itext docment
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileOutputStream;

/**
 *
 * @author Budi Utomo
 */
public class uploadGambar extends javax.swing.JFrame {

    /**
     * Creates new form uploadGambar
     */
    public uploadGambar() {
        initComponents();
        load_table();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jFileChooser2 = new javax.swing.JFileChooser();
        btnPilih = new javax.swing.JButton();
        btnUpload = new javax.swing.JButton();
        labelImg = new javax.swing.JLabel();
        textImg = new javax.swing.JTextField();
        btnReset = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableImg = new javax.swing.JTable();
        btnCetak = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnPilih.setText("pilih");
        btnPilih.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPilihActionPerformed(evt);
            }
        });

        btnUpload.setText("upload");
        btnUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadActionPerformed(evt);
            }
        });

        btnReset.setText("reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        tableImg.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][] {
                        { null, null },
                        { null, null },
                        { null, null },
                        { null, null },
                        { null, null },
                        { null, null },
                        { null, null }
                },
                new String[] {
                        "Title 1", "Title 2"
                }) {
            Class[] types = new Class[] {
                    java.lang.Byte.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }
        });
        tableImg.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableImgMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableImg);

        btnCetak.setText("cetak pdf");
        btnCetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCetakActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap(192, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout
                                                .createSequentialGroup()
                                                .addComponent(labelImg, javax.swing.GroupLayout.PREFERRED_SIZE, 413,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(btnUpload, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(btnPilih, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(textImg, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                209, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout
                                                .createSequentialGroup()
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(40, 40, 40)
                                                .addComponent(btnCetak, javax.swing.GroupLayout.PREFERRED_SIZE, 89,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(23, 23, 23)))));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(labelImg, javax.swing.GroupLayout.PREFERRED_SIZE, 225,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(btnReset)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btnPilih)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btnUpload)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(textImg, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnCetak))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCetakActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnCetakActionPerformed
        // TODO add your handling code here:
        try {
            String file_name = "D:\\test-pdf.pdf";

            // create a document object
            Document document = new Document();
            PdfWriter.getInstance(document, new FileOutputStream(file_name));

            document.open();
            // make centre paragraf
            Paragraph p = new Paragraph("Hello World");
            p.setAlignment(Element.ALIGN_CENTER);
            document.add(p);
            // ad null paragraf
            document.add(new Paragraph("\n"));

            try {
                java.sql.Connection conn = (Connection) koneksi.getKoneksi();
                java.sql.Statement stm = conn.createStatement();
                String sql = "SELECT id,file_name FROM tes";
                java.sql.ResultSet res = stm.executeQuery(sql);
                PdfPTable table = new PdfPTable(res.getMetaData().getColumnCount());
                for (int i = 1; i <= res.getMetaData().getColumnCount(); i++) {
                    System.out.println(res.getMetaData().getColumnName(i));
                    table.addCell(res.getMetaData().getColumnName(i));
                }

                while (res.next()) {
                    for (int i = 1; i <= res.getMetaData().getColumnCount(); i++) {
                        table.addCell(res.getString(i));
                    }
                }
                document.add(table);

                JOptionPane.showMessageDialog(null, "data dari database berhasil di export ke pdf");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "data dari database gagal di export ke pdf");
            }

            document.close();
            JOptionPane.showMessageDialog(null, "PDF berhasil dibuat");
        } catch (Exception e) {
            System.err.println(e.getMessage());
            JOptionPane.showMessageDialog(null, "PDF gagal dibuat");
        }

    }// GEN-LAST:event_btnCetakActionPerformed

    private void tableImgMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_tableImgMouseClicked
        // TODO add your handling code here:
        int row = tableImg.getSelectedRow();
        // get id from table
        String id = tableImg.getValueAt(row, 0).toString();
        try {
            java.sql.Connection conn = (Connection) koneksi.getKoneksi();
            String sql = "SELECT img FROM tes WHERE id = (?)";
            PreparedStatement pst = conn.prepareStatement(sql);
            pst.setString(1, id);
            ResultSet rs = (ResultSet) pst.executeQuery();
            if (rs.next()) {
                byte[] img = rs.getBytes("img");
                ImageIcon image = new ImageIcon(img);
                Image im = image.getImage();
                Image myImg = im.getScaledInstance(labelImg.getWidth(), labelImg.getHeight(), Image.SCALE_SMOOTH);
                ImageIcon image1 = new ImageIcon(myImg);
                labelImg.setIcon(image1);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }// GEN-LAST:event_tableImgMouseClicked

    private void btnPilihActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnPilihActionPerformed
        // TODO add your handling code here:
        labelImg.setIcon(null);
        try {
            jFileChooser1.showOpenDialog(this);
            File f = jFileChooser1.getSelectedFile();
            String filename = f.getAbsolutePath();
            ImageIcon imageIcon = new ImageIcon(
                    new ImageIcon(filename).getImage().getScaledInstance(labelImg.getWidth(),
                            labelImg.getHeight(), Image.SCALE_DEFAULT));
            labelImg.setIcon(imageIcon);
            textImg.setText(filename);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

    }// GEN-LAST:event_btnPilihActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        textImg.setText("");
        labelImg.setIcon(null);
        load_table();
    }// GEN-LAST:event_btnResetActionPerformed

    private void btnUploadActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnUploadActionPerformed
        // TODO add your handling code here:
        java.sql.Connection conn;
        PreparedStatement p;
        try {
            conn = (Connection) koneksi.getKoneksi();
            String dire = textImg.getText();
            System.out.println(dire);
            File ImgPath = new File(dire);

            FileInputStream fin = new FileInputStream(ImgPath);
            String query = "INSERT INTO tes (img, file_name) VALUES (?,?);";
            p = conn.prepareStatement(query);
            if (textImg.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "belum pilih gambar");
            } else {
                p.setBinaryStream(1, fin, (int) ImgPath.length());
                p.setString(2, ImgPath.getName());
                p.execute();
                JOptionPane.showMessageDialog(null, "berhasil upload gambar");
                load_table();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

    }// GEN-LAST:event_btnUploadActionPerformed

    private void load_table() {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("id");
        model.addColumn("file_name");

        JTable table = new JTable(model);

        try {
            java.sql.Connection conn = (Connection) koneksi.getKoneksi();
            String sql = "SELECT * FROM tes";
            Statement stmt = conn.createStatement();
            java.sql.ResultSet rs = (ResultSet) stmt.executeQuery(sql);

            while (rs.next()) {
                byte[] img = rs.getBytes("img");
                model.addRow(new Object[] { rs.getString("id"), rs.getString("file_name") });
            }
            tableImg.setModel(model);
            stmt.close();
            conn.close();
        } catch (

        Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(uploadGambar.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(uploadGambar.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(uploadGambar.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(uploadGambar.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new uploadGambar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCetak;
    private javax.swing.JButton btnPilih;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnUpload;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JFileChooser jFileChooser2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelImg;
    private javax.swing.JTable tableImg;
    private javax.swing.JTextField textImg;
    // End of variables declaration//GEN-END:variables
}
